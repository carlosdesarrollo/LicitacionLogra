@model AgropuliApp.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_Shared/_AdminLayout.cshtml";
}

<h4 class="title text-white text-center d-block box-shadow">Editar el Usuario</h4>

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.NationalId)
        @Html.HiddenFor(model => model.FullName)
        @Html.HiddenFor(model => model.RoleId)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Usuario", htmlAttributes: new { @class = "control-label" })
            <span class="form-control inset-box-shadow" readonly>@Model.Username</span>
        </div>

        <div class="form-group">
            @Html.Label("Cédula de ciudadanía", htmlAttributes: new { @class = "control-label" })
            <span class="form-control inset-box-shadow" readonly>@Model.NationalId</span>
        </div>

        <div class="form-group">
            @Html.Label("Nombre completo", htmlAttributes: new { @class = "control-label" })
            <span class="form-control inset-box-shadow" readonly>@Model.FullName</span>
        </div>

        <div class="form-group">
            @Html.Label("Contraseña", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "100", type = "email" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Dirección", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "200" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Municipio", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "100", autocomplete = "off", placeholder = "" } })
            @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vereda, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Vereda, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "100" } })
            @Html.ValidationMessageFor(model => model.Vereda, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Teléfono/Celular", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "12" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Finca", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Farm, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "100" } })
            @Html.ValidationMessageFor(model => model.Farm, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Cultivo principal", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Crop, new { htmlAttributes = new { @class = "form-control inset-box-shadow", @maxlength = "100" } })
            @Html.ValidationMessageFor(model => model.Crop, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Ubicación", htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control inset-box-shadow" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>

        <input type="submit" value="Guardar cambios" class="btn btn-success btn-block box-shadow" />
        <a class="btn btn-secondary btn-block box-shadow" href="/Admin/Users/Index">Regresar</a>
    }
</div>

<script>
    var place;

    function initialize() {
        var options = {
            types: ["(cities)"]
        };

        var input = document.getElementById("Town");
        var autocomplete = new google.maps.places.Autocomplete(input, options);

        autocomplete.setComponentRestrictions(
            { 'country': ['co'] });

        google.maps.event.addListener(autocomplete, "place_changed", function () {
            place = $("#Town").val();
        });
    }
    google.maps.event.addDomListener(window, "load", initialize);

    $("#Town").blur(function () {
        if ($("#Town").val() != place) {
            $("#Town").val("");
        }
    });
</script>